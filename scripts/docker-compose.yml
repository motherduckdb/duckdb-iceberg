services:
  rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    networks:
      iceberg_net:
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    volumes:
      - type: bind
        source: ../data/generated/iceberg/spark-rest/
        target: /data
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      iceberg_net:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: |
      /bin/sh -c "
      until /usr/bin/mc config host add minio http://minio:9000 admin password; do
        echo 'Waiting for MinIO...';
        sleep 2;
      done;

      # Wait for bucket to exist or create it
      if ! /usr/bin/mc ls minio/warehouse > /dev/null 2>&1; then
        /usr/bin/mc mb minio/warehouse;
      fi

      # Optional: clean the namespace for testing
      /usr/bin/mc rm -r --force minio/warehouse/default || true;

      # Create the `default` namespace (directory) and dummy metadata file
      /usr/bin/mc mb minio/warehouse/default;
      echo '{}' > /tmp/metadata.json;
      /usr/bin/mc cp /tmp/metadata.json minio/warehouse/default/metadata/metadata.json;

      # Make it public (optional)
      /usr/bin/mc policy set public minio/warehouse;

      echo 'MinIO warehouse and default namespace initialized.';
      tail -f /dev/null
      "
networks:
  iceberg_net: