# name: test/sql/local/iceberg_on_tpch.test
# description: test integration with iceberg catalog read
# group: [local]

require-env ICEBERG_SERVER_AVAILABLE

require avro

require parquet

require iceberg

require httpfs

require tpch

statement ok
CREATE SECRET my_datalake_storage (
    TYPE S3,
    ENDPOINT '127.0.0.1:9000',
    URL_STYLE 'path',
    KEY_ID 'admin',
    SECRET 'password',
    USE_SSL 0
);

# Note: the 'CLIENT_SECRET' is not verified at all by the authorization server,
# so it's not actually testing authorization
statement ok
ATTACH '' AS my_datalake (
    TYPE ICEBERG,
    CLIENT_ID 'admin',
    CLIENT_SECRET 'password',
    ENDPOINT '127.0.0.1:8181'
);

statement ok
create view customer as select * from my_datalake.default.customer;

statement ok
create view lineitem as select * from my_datalake.default.lineitem;

statement ok
create view nation as select * from my_datalake.default.nation;

statement ok
create view orders as select * from my_datalake.default.orders;

statement ok
create view part as select * from my_datalake.default.part;

statement ok
create view partsupp as select * from my_datalake.default.partsupp;

statement ok
create view region as select * from my_datalake.default.region;

statement ok
create view supplier as select * from my_datalake.default.supplier;


loop i 1 9

query I
PRAGMA tpch(${i})
----
<FILE>:duckdb/extension/tpch/dbgen/answers/sf1/q0${i}.csv

endloop

loop i 10 23

query I
PRAGMA tpch(${i})
----
<FILE>:duckdb/extension/tpch/dbgen/answers/sf1/q${i}.csv

endloop