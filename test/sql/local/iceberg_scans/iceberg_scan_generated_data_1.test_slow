# name: test/sql/local/iceberg_scans/iceberg_scan_generated_data_1.test_slow
# description: test iceberg extension with the sf1 generated test set
# group: [iceberg_scans]

require avro

require parquet

require iceberg

require-env DUCKDB_ICEBERG_HAVE_GENERATED_DATA

# Check count matches
query I nosort count_iceberg_scan
SELECT count(*) FROM ICEBERG_SCAN('data/generated/iceberg/spark-local/default/pyspark_iceberg_table_v1');


query I nosort count_iceberg_scan
select count(*) from read_parquet('data/generated/intermediates/spark-local/pyspark_iceberg_table_v1/last/data.parquet/*.parquet');

# Check data is identical, sorting by uuid to guarantee unique order.
query I nosort q1
SELECT COUNT(*) FROM ICEBERG_SCAN('data/generated/iceberg/spark-local/default/pyspark_iceberg_table_v1');
----

query I nosort q1
SELECT COUNT(*) FROM PARQUET_SCAN('data/generated/intermediates/spark-local/pyspark_iceberg_table_v1/last/data.parquet/*.parquet');
----

query I nosort q2
SELECT COUNT(*), MIN(l_suppkey_long), MAX(l_suppkey_long), SUM(l_suppkey_long) FROM ICEBERG_SCAN('data/generated/iceberg/spark-local/default/pyspark_iceberg_table_v1');
----

query I nosort q2
SELECT COUNT(*), MIN(l_suppkey_long), MAX(l_suppkey_long), SUM(l_suppkey_long) FROM PARQUET_SCAN('data/generated/intermediates/spark-local/pyspark_iceberg_table_v1/last/data.parquet/*.parquet');
----

# Full table compare: very slow
query I nosort q3
SELECT * FROM ICEBERG_SCAN('data/generated/iceberg/spark-local/default/pyspark_iceberg_table_v1') WHERE uuid NOT NULL ORDER BY uuid;
----

query I nosort q3
SELECT * FROM PARQUET_SCAN('data/generated/intermediates/spark-local/pyspark_iceberg_table_v1/last/data.parquet/*.parquet')  WHERE uuid NOT NULL ORDER BY uuid;
----
