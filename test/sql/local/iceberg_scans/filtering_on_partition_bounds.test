# name: test/sql/local/iceberg_scans/filtering_on_partition_bounds.test
# group: [iceberg_scans]

require-env DUCKDB_ICEBERG_HAVE_GENERATED_DATA

require avro

require parquet

require iceberg

statement ok
pragma enable_logging=true;

statement ok
set enable_logging=false;
set logging_storage='stdout';
set logging_storage='memory';
set enable_logging=true;

# 5 snapshots that each add 1000 rows (incremental)
query I
select count(*) from ICEBERG_SCAN('data/generated/iceberg/spark-local/default/filtering_on_partition_bounds');
----
5000

statement ok
pragma truncate_duckdb_logs;

query I
select count(*) from ICEBERG_SCAN('data/generated/iceberg/spark-local/default/filtering_on_partition_bounds') where seq = 1
----
1000

# Using the logs (which contains the manifest_path), join it against the iceberg metadata to sum the record_counts of the skipped data files
query I
SELECT SUM(meta.record_count) AS total_record_count
FROM (
    SELECT 
        message.split(': ')[2][2:-2] AS msg
    FROM duckdb_logs
    WHERE type = 'duckdb.Extensions.Iceberg' and message.contains('manifest_file')
) logs
JOIN ICEBERG_METADATA('data/generated/iceberg/spark-local/default/filtering_on_partition_bounds') meta
ON logs.msg = meta.manifest_path;
----
4000

statement ok
pragma truncate_duckdb_logs;

query I
select count(*) from ICEBERG_SCAN('data/generated/iceberg/spark-local/default/filtering_on_partition_bounds') where seq > 1 and seq < 4;
----
2000

query I
SELECT SUM(meta.record_count) AS total_record_count
FROM (
    SELECT 
        message.split(': ')[2][2:-2] AS msg
    FROM duckdb_logs
    WHERE type = 'duckdb.Extensions.Iceberg' and message.contains('manifest_file')
) logs
JOIN ICEBERG_METADATA('data/generated/iceberg/spark-local/default/filtering_on_partition_bounds') meta
ON logs.msg = meta.manifest_path;
----
3000

statement ok
pragma truncate_duckdb_logs;

query I
select count(*) from ICEBERG_SCAN('data/generated/iceberg/spark-local/default/filtering_on_partition_bounds') where seq >= 2 and seq <= 3;
----
2000

query I
WITH result as (
	SELECT SUM(meta.record_count) AS total_record_count
	FROM (
		SELECT 
			message.split(': ')[2][2:-2] AS msg
		FROM duckdb_logs
		WHERE type = 'duckdb.Extensions.Iceberg' and message.contains('manifest_file')
	) logs
	JOIN ICEBERG_METADATA('data/generated/iceberg/spark-local/default/filtering_on_partition_bounds') meta
	ON logs.msg = meta.manifest_path
)
select total_record_count from result;
----
3000
