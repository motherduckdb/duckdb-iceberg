# name: test/sql/local/iceberg_scans/filtering_on_bounds.test
# group: [iceberg_scans]

require-env DUCKDB_ICEBERG_HAVE_GENERATED_DATA

require avro

require parquet

require iceberg

statement ok
pragma enable_logging=true;

statement ok
set enable_logging=false;
set logging_storage='stdout';
set logging_storage='memory';
set enable_logging=true;

# 5 snapshots that each add 1000 rows (incremental)
query I
select count(*) from ICEBERG_SCAN('data/generated/iceberg/spark-local/default/filtering_on_bounds');
----
5000

statement ok
pragma truncate_duckdb_logs;

query I
select count(*) from ICEBERG_SCAN('data/generated/iceberg/spark-local/default/filtering_on_bounds') where col1 > 500;
----
4499

# Using the logs (which contains the data_file path), join it against the iceberg metadata to sum the record_counts of the skipped data files
query I
SELECT SUM(meta.record_count) AS total_record_count
FROM (
    SELECT 
        message.split(': ')[2][2:-2] AS msg
    FROM duckdb_logs
    WHERE type = 'duckdb.Extensions.Iceberg'
) logs
JOIN ICEBERG_METADATA('data/generated/iceberg/spark-local/default/filtering_on_bounds') meta
ON logs.msg = meta.file_path;
----
500

statement ok
pragma truncate_duckdb_logs;

query I
select count(*) from ICEBERG_SCAN('data/generated/iceberg/spark-local/default/filtering_on_bounds') where col1 > 1500;
----
3499

query I
SELECT SUM(meta.record_count) AS total_record_count
FROM (
    SELECT 
        message.split(': ')[2][2:-2] AS msg
    FROM duckdb_logs
    WHERE type = 'duckdb.Extensions.Iceberg'
) logs
JOIN ICEBERG_METADATA('data/generated/iceberg/spark-local/default/filtering_on_bounds') meta
ON logs.msg = meta.file_path;
----
1500

statement ok
pragma truncate_duckdb_logs;

query I
select count(*) from ICEBERG_SCAN('data/generated/iceberg/spark-local/default/filtering_on_bounds') where col1 >= 2300 and col1 < 3500;
----
1200

query I
WITH result as (
	SELECT SUM(meta.record_count) AS total_record_count
	FROM (
		SELECT 
			message.split(': ')[2][2:-2] AS msg
		FROM duckdb_logs
		WHERE type = 'duckdb.Extensions.Iceberg'
	) logs
	JOIN ICEBERG_METADATA('data/generated/iceberg/spark-local/default/filtering_on_bounds') meta
	ON logs.msg = meta.file_path
)
select total_record_count >= 3500 AND total_record_count <= 3800 from result
----
true
